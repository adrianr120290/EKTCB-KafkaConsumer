/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package mx.baz.avro.model.liabilities;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Este esquema describe los datos de un evento financiero individual de captación */
@org.apache.avro.specific.AvroGenerated
public class TransactionHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7901929066182513008L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TransactionHeader\",\"namespace\":\"mx.baz.avro.model.liabilities\",\"doc\":\"Este esquema describe los datos de un evento financiero individual de captación\",\"fields\":[{\"name\":\"entidad\",\"type\":\"string\",\"example\":\"0127\",\"minLength\":4,\"maxLength\":4},{\"name\":\"canal\",\"type\":\"string\",\"example\":\"001\",\"minLength\":1,\"maxLength\":3},{\"name\":\"canalOrigen\",\"type\":\"string\",\"example\":\"001\",\"minLength\":3,\"maxLength\":3},{\"name\":\"sucursal\",\"type\":\"string\",\"example\":\"0100\",\"minLength\":4,\"maxLength\":4},{\"name\":\"fechaEmision\",\"type\":\"string\",\"example\":\"20200216 14:00:00\",\"minLength\":17,\"maxLength\":17},{\"name\":\"idMensaje\",\"type\":\"int\",\"example\":1234567890},{\"name\":\"terminal\",\"type\":\"string\",\"example\":\"IKOSF900\",\"minLength\":4,\"maxLength\":8},{\"name\":\"usuario\",\"type\":\"string\",\"example\":\"FE2C9000\",\"minLength\":8,\"maxLength\":8},{\"name\":\"idAplicativo\",\"type\":\"int\",\"example\":\"1\"},{\"name\":\"referenciaUnica\",\"type\":[\"null\",\"string\"],\"default\":null,\"example\":\"123e4567e89b12d3a456426655440000\",\"minLength\":32,\"maxLength\":32}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TransactionHeader> ENCODER =
      new BinaryMessageEncoder<TransactionHeader>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TransactionHeader> DECODER =
      new BinaryMessageDecoder<TransactionHeader>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TransactionHeader> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TransactionHeader> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TransactionHeader> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TransactionHeader>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TransactionHeader to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TransactionHeader from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TransactionHeader instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TransactionHeader fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence entidad;
   private java.lang.CharSequence canal;
   private java.lang.CharSequence canalOrigen;
   private java.lang.CharSequence sucursal;
   private java.lang.CharSequence fechaEmision;
   private int idMensaje;
   private java.lang.CharSequence terminal;
   private java.lang.CharSequence usuario;
   private int idAplicativo;
   private java.lang.CharSequence referenciaUnica;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TransactionHeader() {}

  /**
   * All-args constructor.
   * @param entidad The new value for entidad
   * @param canal The new value for canal
   * @param canalOrigen The new value for canalOrigen
   * @param sucursal The new value for sucursal
   * @param fechaEmision The new value for fechaEmision
   * @param idMensaje The new value for idMensaje
   * @param terminal The new value for terminal
   * @param usuario The new value for usuario
   * @param idAplicativo The new value for idAplicativo
   * @param referenciaUnica The new value for referenciaUnica
   */
  public TransactionHeader(java.lang.CharSequence entidad, java.lang.CharSequence canal, java.lang.CharSequence canalOrigen, java.lang.CharSequence sucursal, java.lang.CharSequence fechaEmision, java.lang.Integer idMensaje, java.lang.CharSequence terminal, java.lang.CharSequence usuario, java.lang.Integer idAplicativo, java.lang.CharSequence referenciaUnica) {
    this.entidad = entidad;
    this.canal = canal;
    this.canalOrigen = canalOrigen;
    this.sucursal = sucursal;
    this.fechaEmision = fechaEmision;
    this.idMensaje = idMensaje;
    this.terminal = terminal;
    this.usuario = usuario;
    this.idAplicativo = idAplicativo;
    this.referenciaUnica = referenciaUnica;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return entidad;
    case 1: return canal;
    case 2: return canalOrigen;
    case 3: return sucursal;
    case 4: return fechaEmision;
    case 5: return idMensaje;
    case 6: return terminal;
    case 7: return usuario;
    case 8: return idAplicativo;
    case 9: return referenciaUnica;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: entidad = (java.lang.CharSequence)value$; break;
    case 1: canal = (java.lang.CharSequence)value$; break;
    case 2: canalOrigen = (java.lang.CharSequence)value$; break;
    case 3: sucursal = (java.lang.CharSequence)value$; break;
    case 4: fechaEmision = (java.lang.CharSequence)value$; break;
    case 5: idMensaje = (java.lang.Integer)value$; break;
    case 6: terminal = (java.lang.CharSequence)value$; break;
    case 7: usuario = (java.lang.CharSequence)value$; break;
    case 8: idAplicativo = (java.lang.Integer)value$; break;
    case 9: referenciaUnica = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'entidad' field.
   * @return The value of the 'entidad' field.
   */
  public java.lang.CharSequence getEntidad() {
    return entidad;
  }


  /**
   * Sets the value of the 'entidad' field.
   * @param value the value to set.
   */
  public void setEntidad(java.lang.CharSequence value) {
    this.entidad = value;
  }

  /**
   * Gets the value of the 'canal' field.
   * @return The value of the 'canal' field.
   */
  public java.lang.CharSequence getCanal() {
    return canal;
  }


  /**
   * Sets the value of the 'canal' field.
   * @param value the value to set.
   */
  public void setCanal(java.lang.CharSequence value) {
    this.canal = value;
  }

  /**
   * Gets the value of the 'canalOrigen' field.
   * @return The value of the 'canalOrigen' field.
   */
  public java.lang.CharSequence getCanalOrigen() {
    return canalOrigen;
  }


  /**
   * Sets the value of the 'canalOrigen' field.
   * @param value the value to set.
   */
  public void setCanalOrigen(java.lang.CharSequence value) {
    this.canalOrigen = value;
  }

  /**
   * Gets the value of the 'sucursal' field.
   * @return The value of the 'sucursal' field.
   */
  public java.lang.CharSequence getSucursal() {
    return sucursal;
  }


  /**
   * Sets the value of the 'sucursal' field.
   * @param value the value to set.
   */
  public void setSucursal(java.lang.CharSequence value) {
    this.sucursal = value;
  }

  /**
   * Gets the value of the 'fechaEmision' field.
   * @return The value of the 'fechaEmision' field.
   */
  public java.lang.CharSequence getFechaEmision() {
    return fechaEmision;
  }


  /**
   * Sets the value of the 'fechaEmision' field.
   * @param value the value to set.
   */
  public void setFechaEmision(java.lang.CharSequence value) {
    this.fechaEmision = value;
  }

  /**
   * Gets the value of the 'idMensaje' field.
   * @return The value of the 'idMensaje' field.
   */
  public int getIdMensaje() {
    return idMensaje;
  }


  /**
   * Sets the value of the 'idMensaje' field.
   * @param value the value to set.
   */
  public void setIdMensaje(int value) {
    this.idMensaje = value;
  }

  /**
   * Gets the value of the 'terminal' field.
   * @return The value of the 'terminal' field.
   */
  public java.lang.CharSequence getTerminal() {
    return terminal;
  }


  /**
   * Sets the value of the 'terminal' field.
   * @param value the value to set.
   */
  public void setTerminal(java.lang.CharSequence value) {
    this.terminal = value;
  }

  /**
   * Gets the value of the 'usuario' field.
   * @return The value of the 'usuario' field.
   */
  public java.lang.CharSequence getUsuario() {
    return usuario;
  }


  /**
   * Sets the value of the 'usuario' field.
   * @param value the value to set.
   */
  public void setUsuario(java.lang.CharSequence value) {
    this.usuario = value;
  }

  /**
   * Gets the value of the 'idAplicativo' field.
   * @return The value of the 'idAplicativo' field.
   */
  public int getIdAplicativo() {
    return idAplicativo;
  }


  /**
   * Sets the value of the 'idAplicativo' field.
   * @param value the value to set.
   */
  public void setIdAplicativo(int value) {
    this.idAplicativo = value;
  }

  /**
   * Gets the value of the 'referenciaUnica' field.
   * @return The value of the 'referenciaUnica' field.
   */
  public java.lang.CharSequence getReferenciaUnica() {
    return referenciaUnica;
  }


  /**
   * Sets the value of the 'referenciaUnica' field.
   * @param value the value to set.
   */
  public void setReferenciaUnica(java.lang.CharSequence value) {
    this.referenciaUnica = value;
  }

  /**
   * Creates a new TransactionHeader RecordBuilder.
   * @return A new TransactionHeader RecordBuilder
   */
  public static mx.baz.avro.model.liabilities.TransactionHeader.Builder newBuilder() {
    return new mx.baz.avro.model.liabilities.TransactionHeader.Builder();
  }

  /**
   * Creates a new TransactionHeader RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TransactionHeader RecordBuilder
   */
  public static mx.baz.avro.model.liabilities.TransactionHeader.Builder newBuilder(mx.baz.avro.model.liabilities.TransactionHeader.Builder other) {
    if (other == null) {
      return new mx.baz.avro.model.liabilities.TransactionHeader.Builder();
    } else {
      return new mx.baz.avro.model.liabilities.TransactionHeader.Builder(other);
    }
  }

  /**
   * Creates a new TransactionHeader RecordBuilder by copying an existing TransactionHeader instance.
   * @param other The existing instance to copy.
   * @return A new TransactionHeader RecordBuilder
   */
  public static mx.baz.avro.model.liabilities.TransactionHeader.Builder newBuilder(mx.baz.avro.model.liabilities.TransactionHeader other) {
    if (other == null) {
      return new mx.baz.avro.model.liabilities.TransactionHeader.Builder();
    } else {
      return new mx.baz.avro.model.liabilities.TransactionHeader.Builder(other);
    }
  }

  /**
   * RecordBuilder for TransactionHeader instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TransactionHeader>
    implements org.apache.avro.data.RecordBuilder<TransactionHeader> {

    private java.lang.CharSequence entidad;
    private java.lang.CharSequence canal;
    private java.lang.CharSequence canalOrigen;
    private java.lang.CharSequence sucursal;
    private java.lang.CharSequence fechaEmision;
    private int idMensaje;
    private java.lang.CharSequence terminal;
    private java.lang.CharSequence usuario;
    private int idAplicativo;
    private java.lang.CharSequence referenciaUnica;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(mx.baz.avro.model.liabilities.TransactionHeader.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.entidad)) {
        this.entidad = data().deepCopy(fields()[0].schema(), other.entidad);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.canal)) {
        this.canal = data().deepCopy(fields()[1].schema(), other.canal);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.canalOrigen)) {
        this.canalOrigen = data().deepCopy(fields()[2].schema(), other.canalOrigen);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.sucursal)) {
        this.sucursal = data().deepCopy(fields()[3].schema(), other.sucursal);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.fechaEmision)) {
        this.fechaEmision = data().deepCopy(fields()[4].schema(), other.fechaEmision);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.idMensaje)) {
        this.idMensaje = data().deepCopy(fields()[5].schema(), other.idMensaje);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.terminal)) {
        this.terminal = data().deepCopy(fields()[6].schema(), other.terminal);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.usuario)) {
        this.usuario = data().deepCopy(fields()[7].schema(), other.usuario);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.idAplicativo)) {
        this.idAplicativo = data().deepCopy(fields()[8].schema(), other.idAplicativo);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.referenciaUnica)) {
        this.referenciaUnica = data().deepCopy(fields()[9].schema(), other.referenciaUnica);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing TransactionHeader instance
     * @param other The existing instance to copy.
     */
    private Builder(mx.baz.avro.model.liabilities.TransactionHeader other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.entidad)) {
        this.entidad = data().deepCopy(fields()[0].schema(), other.entidad);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.canal)) {
        this.canal = data().deepCopy(fields()[1].schema(), other.canal);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.canalOrigen)) {
        this.canalOrigen = data().deepCopy(fields()[2].schema(), other.canalOrigen);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sucursal)) {
        this.sucursal = data().deepCopy(fields()[3].schema(), other.sucursal);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fechaEmision)) {
        this.fechaEmision = data().deepCopy(fields()[4].schema(), other.fechaEmision);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.idMensaje)) {
        this.idMensaje = data().deepCopy(fields()[5].schema(), other.idMensaje);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.terminal)) {
        this.terminal = data().deepCopy(fields()[6].schema(), other.terminal);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.usuario)) {
        this.usuario = data().deepCopy(fields()[7].schema(), other.usuario);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.idAplicativo)) {
        this.idAplicativo = data().deepCopy(fields()[8].schema(), other.idAplicativo);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.referenciaUnica)) {
        this.referenciaUnica = data().deepCopy(fields()[9].schema(), other.referenciaUnica);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'entidad' field.
      * @return The value.
      */
    public java.lang.CharSequence getEntidad() {
      return entidad;
    }


    /**
      * Sets the value of the 'entidad' field.
      * @param value The value of 'entidad'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setEntidad(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.entidad = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'entidad' field has been set.
      * @return True if the 'entidad' field has been set, false otherwise.
      */
    public boolean hasEntidad() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'entidad' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearEntidad() {
      entidad = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'canal' field.
      * @return The value.
      */
    public java.lang.CharSequence getCanal() {
      return canal;
    }


    /**
      * Sets the value of the 'canal' field.
      * @param value The value of 'canal'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setCanal(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.canal = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'canal' field has been set.
      * @return True if the 'canal' field has been set, false otherwise.
      */
    public boolean hasCanal() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'canal' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearCanal() {
      canal = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'canalOrigen' field.
      * @return The value.
      */
    public java.lang.CharSequence getCanalOrigen() {
      return canalOrigen;
    }


    /**
      * Sets the value of the 'canalOrigen' field.
      * @param value The value of 'canalOrigen'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setCanalOrigen(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.canalOrigen = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'canalOrigen' field has been set.
      * @return True if the 'canalOrigen' field has been set, false otherwise.
      */
    public boolean hasCanalOrigen() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'canalOrigen' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearCanalOrigen() {
      canalOrigen = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sucursal' field.
      * @return The value.
      */
    public java.lang.CharSequence getSucursal() {
      return sucursal;
    }


    /**
      * Sets the value of the 'sucursal' field.
      * @param value The value of 'sucursal'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setSucursal(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.sucursal = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'sucursal' field has been set.
      * @return True if the 'sucursal' field has been set, false otherwise.
      */
    public boolean hasSucursal() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sucursal' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearSucursal() {
      sucursal = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'fechaEmision' field.
      * @return The value.
      */
    public java.lang.CharSequence getFechaEmision() {
      return fechaEmision;
    }


    /**
      * Sets the value of the 'fechaEmision' field.
      * @param value The value of 'fechaEmision'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setFechaEmision(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.fechaEmision = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'fechaEmision' field has been set.
      * @return True if the 'fechaEmision' field has been set, false otherwise.
      */
    public boolean hasFechaEmision() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'fechaEmision' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearFechaEmision() {
      fechaEmision = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'idMensaje' field.
      * @return The value.
      */
    public int getIdMensaje() {
      return idMensaje;
    }


    /**
      * Sets the value of the 'idMensaje' field.
      * @param value The value of 'idMensaje'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setIdMensaje(int value) {
      validate(fields()[5], value);
      this.idMensaje = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'idMensaje' field has been set.
      * @return True if the 'idMensaje' field has been set, false otherwise.
      */
    public boolean hasIdMensaje() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'idMensaje' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearIdMensaje() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'terminal' field.
      * @return The value.
      */
    public java.lang.CharSequence getTerminal() {
      return terminal;
    }


    /**
      * Sets the value of the 'terminal' field.
      * @param value The value of 'terminal'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setTerminal(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.terminal = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'terminal' field has been set.
      * @return True if the 'terminal' field has been set, false otherwise.
      */
    public boolean hasTerminal() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'terminal' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearTerminal() {
      terminal = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'usuario' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsuario() {
      return usuario;
    }


    /**
      * Sets the value of the 'usuario' field.
      * @param value The value of 'usuario'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setUsuario(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.usuario = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'usuario' field has been set.
      * @return True if the 'usuario' field has been set, false otherwise.
      */
    public boolean hasUsuario() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'usuario' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearUsuario() {
      usuario = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'idAplicativo' field.
      * @return The value.
      */
    public int getIdAplicativo() {
      return idAplicativo;
    }


    /**
      * Sets the value of the 'idAplicativo' field.
      * @param value The value of 'idAplicativo'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setIdAplicativo(int value) {
      validate(fields()[8], value);
      this.idAplicativo = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'idAplicativo' field has been set.
      * @return True if the 'idAplicativo' field has been set, false otherwise.
      */
    public boolean hasIdAplicativo() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'idAplicativo' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearIdAplicativo() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'referenciaUnica' field.
      * @return The value.
      */
    public java.lang.CharSequence getReferenciaUnica() {
      return referenciaUnica;
    }


    /**
      * Sets the value of the 'referenciaUnica' field.
      * @param value The value of 'referenciaUnica'.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder setReferenciaUnica(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.referenciaUnica = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'referenciaUnica' field has been set.
      * @return True if the 'referenciaUnica' field has been set, false otherwise.
      */
    public boolean hasReferenciaUnica() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'referenciaUnica' field.
      * @return This builder.
      */
    public mx.baz.avro.model.liabilities.TransactionHeader.Builder clearReferenciaUnica() {
      referenciaUnica = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TransactionHeader build() {
      try {
        TransactionHeader record = new TransactionHeader();
        record.entidad = fieldSetFlags()[0] ? this.entidad : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.canal = fieldSetFlags()[1] ? this.canal : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.canalOrigen = fieldSetFlags()[2] ? this.canalOrigen : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.sucursal = fieldSetFlags()[3] ? this.sucursal : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.fechaEmision = fieldSetFlags()[4] ? this.fechaEmision : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.idMensaje = fieldSetFlags()[5] ? this.idMensaje : (java.lang.Integer) defaultValue(fields()[5]);
        record.terminal = fieldSetFlags()[6] ? this.terminal : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.usuario = fieldSetFlags()[7] ? this.usuario : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.idAplicativo = fieldSetFlags()[8] ? this.idAplicativo : (java.lang.Integer) defaultValue(fields()[8]);
        record.referenciaUnica = fieldSetFlags()[9] ? this.referenciaUnica : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TransactionHeader>
    WRITER$ = (org.apache.avro.io.DatumWriter<TransactionHeader>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TransactionHeader>
    READER$ = (org.apache.avro.io.DatumReader<TransactionHeader>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.entidad);

    out.writeString(this.canal);

    out.writeString(this.canalOrigen);

    out.writeString(this.sucursal);

    out.writeString(this.fechaEmision);

    out.writeInt(this.idMensaje);

    out.writeString(this.terminal);

    out.writeString(this.usuario);

    out.writeInt(this.idAplicativo);

    if (this.referenciaUnica == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.referenciaUnica);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.entidad = in.readString(this.entidad instanceof Utf8 ? (Utf8)this.entidad : null);

      this.canal = in.readString(this.canal instanceof Utf8 ? (Utf8)this.canal : null);

      this.canalOrigen = in.readString(this.canalOrigen instanceof Utf8 ? (Utf8)this.canalOrigen : null);

      this.sucursal = in.readString(this.sucursal instanceof Utf8 ? (Utf8)this.sucursal : null);

      this.fechaEmision = in.readString(this.fechaEmision instanceof Utf8 ? (Utf8)this.fechaEmision : null);

      this.idMensaje = in.readInt();

      this.terminal = in.readString(this.terminal instanceof Utf8 ? (Utf8)this.terminal : null);

      this.usuario = in.readString(this.usuario instanceof Utf8 ? (Utf8)this.usuario : null);

      this.idAplicativo = in.readInt();

      if (in.readIndex() != 1) {
        in.readNull();
        this.referenciaUnica = null;
      } else {
        this.referenciaUnica = in.readString(this.referenciaUnica instanceof Utf8 ? (Utf8)this.referenciaUnica : null);
      }

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.entidad = in.readString(this.entidad instanceof Utf8 ? (Utf8)this.entidad : null);
          break;

        case 1:
          this.canal = in.readString(this.canal instanceof Utf8 ? (Utf8)this.canal : null);
          break;

        case 2:
          this.canalOrigen = in.readString(this.canalOrigen instanceof Utf8 ? (Utf8)this.canalOrigen : null);
          break;

        case 3:
          this.sucursal = in.readString(this.sucursal instanceof Utf8 ? (Utf8)this.sucursal : null);
          break;

        case 4:
          this.fechaEmision = in.readString(this.fechaEmision instanceof Utf8 ? (Utf8)this.fechaEmision : null);
          break;

        case 5:
          this.idMensaje = in.readInt();
          break;

        case 6:
          this.terminal = in.readString(this.terminal instanceof Utf8 ? (Utf8)this.terminal : null);
          break;

        case 7:
          this.usuario = in.readString(this.usuario instanceof Utf8 ? (Utf8)this.usuario : null);
          break;

        case 8:
          this.idAplicativo = in.readInt();
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.referenciaUnica = null;
          } else {
            this.referenciaUnica = in.readString(this.referenciaUnica instanceof Utf8 ? (Utf8)this.referenciaUnica : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










